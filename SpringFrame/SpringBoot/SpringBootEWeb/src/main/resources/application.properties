## 1 spring.web
## 1.1 配置国际化的区域信息
## 2.2 静态资源的策略（开启、处理链、缓存）
## 开启静态资源映射规则
#spring.web.resources.add-mappings=true
## 设置缓存
#spring.web.resources.cache.period=3600
## 缓存详细合并项控制，覆盖period的配置：浏览器第一次请求服务器，服务器告诉浏览器此资源缓存7200s，7200s以内的所有此资源访问不用发给服务器请求
#spring.web.resources.cache.cachecontrol.max-age=7200
## 使用资源 last-modified 时间，来对比服务器和浏览器的资源是否相同。相同返回状态码304
#spring.web.resources.cache.use-last-modified=true
## 2.3 自定义静态资源文件夹
#spring.web.resources.static-locations=classpath:/a/,classpath:/b/
## 2 spring.mvc
## 2.1 自定义webjars规则
#spring.mvc.webjars-path-pattern=/wj/**
## 2.2 静态资源访问路径前缀
#spring.mvc.static-path-pattern=/static/**
# 自定义日期属性
spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.time=HH:mm:ss
# problemdetails 默认关闭
spring.mvc.problemdetails.enabled=false
# 3.改变路径匹配策略
# path_pattern_parser 新版策略
# ant_path_matcher 老版策略
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# 开启基于请求参数的内容协商功能
spring.mvc.contentnegotiation.favor-parameter=true
# 内容协商时，默认的参数名 "format"
spring.mvc.contentnegotiation.parameter-name=type
# 增加一种新的内容类型
spring.mvc.contentnegotiation.media-types.yaml=text/yaml
# 国际化
spring.messages.basename=messages
spring.messages.encoding=UTF-8
# 错误路径
server.error.path=/error
# Tomcat调优


